generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id        Int              @id @default(autoincrement())
  firstName String           @db.VarChar
  lastName  String           @db.VarChar
  email     String           @db.VarChar
  password  String           @db.VarChar
  authored  book[]           @relation("UserBooks") // Relation with books authored by the user
  read      readingHistory[] @relation("ChapterReadingHistory")
}

model chapter {
  id             Int              @id @default(autoincrement())
  title          String           @db.VarChar
  content        String           @db.VarChar
  book           book             @relation(fields: [bookId], references: [id])
  bookId         Int
  readingHistory readingHistory[] @relation("ChapterReadingHistory")
}

model readingHistory {
  id        Int     @id @default(autoincrement())
  user      user    @relation("ChapterReadingHistory", fields: [userId], references: [id])
  userId    Int
  book      book    @relation(fields: [bookId], references: [id])
  bookId    Int
  chapter   chapter @relation("ChapterReadingHistory", fields: [chapterId], references: [id])
  chapterId Int
}

model book {
  id             Int              @id @default(autoincrement())
  title          String           @db.VarChar
  author         user             @relation("UserBooks", fields: [authorId], references: [id])
  genre          String
  publishedDate  DateTime         @default(now()) @db.Timestamp(6) // Default to createdAt
  lastUpdated    DateTime         @updatedAt @db.Timestamp(6) // Automatically updates on modification
  authorId       Int
  data           String           @db.VarChar
  coverImage     String?          @db.VarChar // Add this field
  chapters       chapter[]
  readingHistory readingHistory[]
}
